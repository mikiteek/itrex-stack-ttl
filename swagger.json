{
  "swagger": "2.0",
  "info": {
    "description": "This is an application for storing data in stack and with TTL supporting",
    "version": "1.0.2",
    "title": "ITRex stack, TTL",
    "contact": {
      "email": "mikiteek@gmail.com"
    },
    "license": {
      "name": "FS29 and FS31",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": [
    "http"
  ],
  "host": "https://salty-wildwood-10874.herokuapp.com",
  "basePath": "/",
  "paths": {
    "/stack": {
      "post": {
        "tags": ["Stack"],
        "summary": "Add item to stack",
        "description": "Add item to stack",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "required": true,
            "description": "Data which you want to add. It can be any type.",
            "schema": {
              "$ref": "#/definitions/addToStack"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Wrong body properties"
          },
          "201": {
            "description": "Ok"
          }
        }
      },
      "delete": {
        "tags": ["Stack"],
        "summary": "Get item in the top of stack, remove one",
        "description": "Get item in the top of stack, remove one",
        "responses": {
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/StackItem"
            }
          },
          "204": {
            "description": "No items"
          }
        }
      }
    },
    "/ttl/{key}": {
      "delete": {
        "tags": ["TTL"],
        "summary": "Delete item by key",
        "description": "Delete film by id",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "type": "string",
            "required": true,
            "description": "Key of the item you want to remove"
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "204": {
            "description": "Nothing to remove"
          }
        }
      },
      "get": {
        "tags": ["TTL"],
        "summary": "Get item by key",
        "description": "Get item by key",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "type": "string",
            "required": true,
            "description": "Key of the item you want to get"
          }
        ],
        "responses": {
          "404": {
            "description": "Not found, or value is empty",
            "schema": {
              "type": "object",
              "example": {
                "message": "Not found"
              }
            }
          },
          "200": {
            "description": "Ok",
            "schema": {
              "$ref": "#/definitions/ttlItemResponse"
            }
          }
        }
      }
    },
    "/ttl": {
      "post": {
        "tags": ["TTL"],
        "summary": "Add item to TTL store",
        "description": "Add item to TTL store",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Body with key, value and optional ttl. The ttl is infinity by default, or enter ttl in seconds, after that seconds item will be deleted.",
            "schema": {
              "$ref": "#/definitions/addToTtl"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Wrong body properties"
          },
          "409": {
            "description": "Key already exist"
          },
          "201": {
            "description": "Ok"
          }
        }
      }
    }
  },
  "definitions": {
    "addToStack": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        }
      }
    },
    "ttlItemResponse": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "addToTtl": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "ttl": {
          "type": "integer"
        }
      }
    },
    "StackItem": {
      "type": "object",
      "properties": {
        "item": {
          "type": "string"
        }
      }
    }
  }
}